/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.atividade.appbank.AccountUser;
import org.json.JSONObject;

import javax.swing.*;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;

import static com.atividade.appbank.AppBank.respostaArmazenada;

/**
 *
 * @author Eliseu
 */
public class InfoUser extends javax.swing.JFrame {
    /**
     * Creates new form InfoUser
     */
    public InfoUser() {
        initComponents();
        setIcon();
        preencherDados();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title = new javax.swing.JLabel();
        descrition = new javax.swing.JLabel();
        usernameUpdate = new javax.swing.JTextField();
        emailUpdate1 = new javax.swing.JTextField();
        tipoContaUpdate = new javax.swing.JTextField();
        agenciatxt = new javax.swing.JLabel();
        nametxt = new javax.swing.JLabel();
        cpftxt = new javax.swing.JLabel();
        cpfUpdate1 = new javax.swing.JTextField();
        rgtxt = new javax.swing.JLabel();
        agenciaUpdate = new javax.swing.JTextField();
        emailtxt1 = new javax.swing.JLabel();
        agenciaUpdate1 = new javax.swing.JTextField();
        agenciatxt1 = new javax.swing.JLabel();
        rgUpdate1 = new javax.swing.JTextField();
        tipocontatxt = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        Telefonetxt = new javax.swing.JLabel();
        telefoneUpdate = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Seus Dados");
        setMinimumSize(new java.awt.Dimension(650, 500));
        setResizable(false);

        title.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        title.setForeground(new java.awt.Color(16, 124, 65));
        title.setText("Seus dados");

        descrition.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        descrition.setText("Todos os dados do banco QBank estão em constância segurança.");

        usernameUpdate.setText("{nome}");
        usernameUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameUpdateActionPerformed(evt);
            }
        });

        emailUpdate1.setText("{email}");
        emailUpdate1.setFocusCycleRoot(true);
        emailUpdate1.setFocusTraversalPolicyProvider(true);
        emailUpdate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailUpdate1ActionPerformed(evt);
            }
        });

        tipoContaUpdate.setEditable(false);
        tipoContaUpdate.setText("{tipoConta}");
        tipoContaUpdate.setBorder(null);
        tipoContaUpdate.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        tipoContaUpdate.setEnabled(false);
        tipoContaUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoContaUpdateActionPerformed(evt);
            }
        });

        agenciatxt.setFont(new java.awt.Font("Poppins", 1, 12)); // NOI18N
        agenciatxt.setText("N° da Conta");

        nametxt.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        nametxt.setText("Nome Completo");

        cpftxt.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        cpftxt.setText("CPF");

        cpfUpdate1.setText("{cpf}");
        cpfUpdate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpfUpdate1ActionPerformed(evt);
            }
        });

        rgtxt.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        rgtxt.setText("RG");

        agenciaUpdate.setEditable(false);
        agenciaUpdate.setText("{numero}");
        agenciaUpdate.setBorder(null);
        agenciaUpdate.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        agenciaUpdate.setEnabled(false);
        agenciaUpdate.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        agenciaUpdate.setSelectionColor(new java.awt.Color(0, 0, 0));
        agenciaUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agenciaUpdateActionPerformed(evt);
            }
        });

        emailtxt1.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        emailtxt1.setText("E-mail");

        agenciaUpdate1.setEditable(false);
        agenciaUpdate1.setText("{agencia}");
        agenciaUpdate1.setBorder(null);
        agenciaUpdate1.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        agenciaUpdate1.setEnabled(false);
        agenciaUpdate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agenciaUpdate1ActionPerformed(evt);
            }
        });

        agenciatxt1.setFont(new java.awt.Font("Poppins", 1, 12)); // NOI18N
        agenciatxt1.setText("Agência");

        rgUpdate1.setText("{rg}");
        rgUpdate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rgUpdate1ActionPerformed(evt);
            }
        });

        tipocontatxt.setFont(new java.awt.Font("Poppins", 1, 12)); // NOI18N
        tipocontatxt.setText("Tipo da Conta");

        jButton1.setBackground(new java.awt.Color(16, 124, 65));
        jButton1.setFont(new java.awt.Font("Poppins", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Atualizar dados");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setFocusable(false);
        jButton1.setRequestFocusEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Telefonetxt.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        Telefonetxt.setText("Telefone");

        telefoneUpdate.setText("{telefone}");
        telefoneUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                telefoneUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(agenciaUpdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(agenciatxt1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tipoContaUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tipocontatxt)))
                    .addComponent(title)
                    .addComponent(descrition, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(emailUpdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cpfUpdate1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Telefonetxt)
                                    .addComponent(telefoneUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(cpftxt)
                            .addComponent(emailtxt1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rgtxt)
                            .addComponent(nametxt)
                            .addComponent(usernameUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rgUpdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(agenciatxt)
                            .addComponent(agenciaUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(171, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(descrition)
                        .addGap(18, 18, 18)
                        .addComponent(agenciatxt1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(agenciaUpdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tipoContaUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tipocontatxt)
                        .addGap(38, 38, 38)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(emailtxt1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(emailUpdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(agenciatxt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(agenciaUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cpftxt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cpfUpdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Telefonetxt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(telefoneUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nametxt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(usernameUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rgtxt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rgUpdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(32, 32, 32)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void usernameUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameUpdateActionPerformed
        }//GEN-LAST:event_usernameUpdateActionPerformed

    private void emailUpdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailUpdate1ActionPerformed
    }//GEN-LAST:event_emailUpdate1ActionPerformed

    private void tipoContaUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoContaUpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipoContaUpdateActionPerformed

    private void cpfUpdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpfUpdate1ActionPerformed
    }//GEN-LAST:event_cpfUpdate1ActionPerformed

    private void agenciaUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agenciaUpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_agenciaUpdateActionPerformed

    private void agenciaUpdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agenciaUpdate1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_agenciaUpdate1ActionPerformed

    private void rgUpdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rgUpdate1ActionPerformed
    }//GEN-LAST:event_rgUpdate1ActionPerformed

    private void telefoneUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_telefoneUpdateActionPerformed
    }//GEN-LAST:event_telefoneUpdateActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            JSONObject respostaJson = new JSONObject(respostaArmazenada);

            String numeroConta = respostaJson.getString("numero");

            String nomeInserido = usernameUpdate.getText();
            String emailInserido = emailUpdate1.getText();
            String cpfInserido = cpfUpdate1.getText();
            String rgInserido = rgUpdate1.getText();
            String telefoneInserido = telefoneUpdate.getText();
            String tipoContaInserido = tipoContaUpdate.getText();
            String agenciaInserida = agenciaUpdate1.getText();
            String numeroAgenciaInserido = agenciaUpdate.getText();

            JSONObject dadosAtualizados = new JSONObject();
            dadosAtualizados.put("nome", nomeInserido);
            dadosAtualizados.put("email", emailInserido);
            dadosAtualizados.put("cpf", cpfInserido);
            dadosAtualizados.put("rg", rgInserido);
            dadosAtualizados.put("telefone", telefoneInserido);
            dadosAtualizados.put("tipoConta", tipoContaInserido);
            dadosAtualizados.put("agencia", agenciaInserida);
            dadosAtualizados.put("numeroAgencia", numeroAgenciaInserido);

            String url = "http://localhost:8080/user/edit/" + numeroConta;

            JSONObject respostaAtualizada = enviarPutParaApi(url, dadosAtualizados);

            if (respostaAtualizada != null) {
                respostaArmazenada = respostaAtualizada.toString();

                preencherDados();

                this.dispose();

            } else {
                JOptionPane.showMessageDialog(this, "Erro ao atualizar os dados.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro ao processar a atualização.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private JSONObject enviarPutParaApi(String url, JSONObject dados) {
        try {
            URL apiUrl = new URL(url);
            HttpURLConnection connection = (HttpURLConnection) apiUrl.openConnection();
            connection.setRequestMethod("PUT");
            connection.setRequestProperty("Content-Type", "application/json");
            connection.setDoOutput(true);

            try (OutputStream os = connection.getOutputStream()) {
                byte[] input = dados.toString().getBytes("utf-8");
                os.write(input, 0, input.length);
            }

            int responseCode = connection.getResponseCode();

            if (responseCode == HttpURLConnection.HTTP_OK) {
                StringBuilder response = new StringBuilder();
                try (BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream(), "utf-8"))) {
                    String inputLine;
                    while ((inputLine = in.readLine()) != null) {
                        response.append(inputLine);
                    }
                }

                JSONObject respostaJson = new JSONObject(response.toString());
                return respostaJson;
            } else {
                StringBuilder responseMessage = new StringBuilder();
                try (BufferedReader in = new BufferedReader(new InputStreamReader(connection.getErrorStream(), "utf-8"))) {
                    String inputLine;
                    while ((inputLine = in.readLine()) != null) {
                        responseMessage.append(inputLine);
                    }
                }
                System.out.println("Erro ao atualizar os dados. Resposta do servidor: " + responseMessage.toString());
            }

            connection.disconnect();
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro ao conectar com a API.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
        return null; // Retorna null em caso de erro
    }


    private void setIcon() {
        try {
            String iconPath = "src/main/java/com/atividade/appbank/icons/logo.png";
            setIconImage(new ImageIcon(iconPath).getImage());
        } catch (Exception e) {
            System.out.println("Erro ao carregar o ícone: " + e.getMessage());
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InfoUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InfoUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InfoUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InfoUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InfoUser().setVisible(true);
            }
        });
    }

    public void preencherDados() {
        try {
            JSONObject respostaJson = new JSONObject(respostaArmazenada);
            JSONObject pessoaJson = respostaJson.getJSONObject("pessoa");

            usernameUpdate.setText(pessoaJson.getString("nome"));
            emailUpdate1.setText(pessoaJson.getString("email"));
            tipoContaUpdate.setText(respostaJson.getString("tipoConta"));
            agenciaUpdate.setText(respostaJson.getString("numero"));
            agenciaUpdate1.setText(respostaJson.getString("agencia"));
            cpfUpdate1.setText(pessoaJson.getString("cpf"));
            rgUpdate1.setText(pessoaJson.getString("rg"));
            telefoneUpdate.setText(pessoaJson.getString("telefone"));
            
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro ao preencher os dados.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Telefonetxt;
    private javax.swing.JTextField agenciaUpdate;
    private javax.swing.JTextField agenciaUpdate1;
    private javax.swing.JLabel agenciatxt;
    private javax.swing.JLabel agenciatxt1;
    private javax.swing.JTextField cpfUpdate1;
    private javax.swing.JLabel cpftxt;
    private javax.swing.JLabel descrition;
    private javax.swing.JTextField emailUpdate1;
    private javax.swing.JLabel emailtxt1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel nametxt;
    private javax.swing.JTextField rgUpdate1;
    private javax.swing.JLabel rgtxt;
    private javax.swing.JTextField telefoneUpdate;
    private javax.swing.JTextField tipoContaUpdate;
    private javax.swing.JLabel tipocontatxt;
    private javax.swing.JLabel title;
    private javax.swing.JTextField usernameUpdate;
    // End of variables declaration//GEN-END:variables
}
